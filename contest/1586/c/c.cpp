/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-10-17 19:05:03
 */
//#pragma GCC optimize("Ofast", "inline", "-ffast-math")
//#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 1e6 + 9;
string mp[MAXN];
int n, m, q, status[MAXN], ba[MAXN];
int lowbit(int x) {
    return x & (-x);
}
int query(int x) {
    int ans = 0;
    while (x > 0) {
        ans += ba[x];
        x -= lowbit(x);
    }
    return ans;
}
void add(int pos, int x) {
    while (pos < MAXN) {
        ba[pos] += x;
        pos += lowbit(pos);
    }
}
void solve () {
    memset(status, 0, sizeof(status));
    memset(ba, 0, sizeof(ba));
    cin >> n >> m;
    for (int i = 1; i <= n; i++) cin >> mp[i];
    for (int j = 1; j <= m; j++) {
        bool ok = true;
        for (int i = 1; i <= n; i++) {
            if (mp[i][j-1] == '.') continue;
            if (i > 1 && j + 1 <= m && mp[i-1][j] == 'X') { ok = false; break; }
        }
        status[j] = ok;
    }

    for (int j = 1; j <= m; j++) {
//        add(j, status[j]);
        status[j] += status[j-1];
    }
    cin >> q;
    while (q--) {
        int l, r;
        cin >> l >> r;
        int sum = status[r] - status[l-1];
        if (sum == (r-l+1)) cout << "YES" << endl;
        else if (sum < (r-l)) cout << "NO" << endl;
        else {
            if (status[r]-status[r-1] == 1) cout << "NO" << endl;
            else cout << "YES" << endl;
        }
    }
}

signed main() {
    fast_stream();
    int t;
//    cin >> t;
    t = 1;
    while (t--) {
        solve();
    }
}