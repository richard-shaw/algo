/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-12-16 17:46:48
 */
#pragma GCC optimize("Ofast", "inline", "-ffast-math")
#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long

set<int> s, p;

int rev(int x) {
    int tmp[70], cnt = 0;
    if (x == 0) tmp[++cnt] = 0;
    else while (x > 0) tmp[++cnt] = x % 2, x >>= 1;
    int ans = 0;
    for (int i = 1; i <= cnt; i++) ans = 2 * ans + tmp[i];
    return ans;
}

int trans(int x, int dig) {
    x = (x << 1) + dig;
    return rev(x);
}

void dfs(int x) {
    if (s.find(x) != s.end()) return;
    if (p.find(x) == p.end() && p.find(rev(x)) == p.end()) return;
    s.insert(x);
    dfs(trans(x, 1));
    dfs(trans(x, 0));
}
void init(int y) {
    p.clear();
    int tmp[70], cnt = 0;
    if (y == 0) tmp[++cnt] = 0;
    else while (y > 0) tmp[++cnt] = y % 2, y >>= 1;
    for (int i = cnt; i >= 1; i--) {
        for (int j = i; j >= 1; j--) {
            int ans = 0;
            for (int k = i; k >= j; k--) ans = 2 * ans + tmp[k];
            p.insert(ans);
        }
    }
}
bool judge(int x, int y) {
    init(y);
    s.clear();
    if (x > y) {
        x = rev(rev(x));
    }
    dfs(x);
    return s.find(y) != s.end();
}

signed main() {
    fast_stream();
    int X, Y;
    cin >> X >> Y;
    cout << (judge(X, Y) ? "YES" : "NO") << endl;
}