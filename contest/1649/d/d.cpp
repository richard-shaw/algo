/* Generated by powerful Codeforces Tool
 * Author: shaw
 * Time: 2022-03-06 17:55:03
 */
#pragma GCC optimize("Ofast", "inline", "-ffast-math")
#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 1e6 + 4;

int cnt[MAXN], sum[MAXN];

bool judge(int r, int y, int C) {
    return (sum[min(C, y * (r + 1) - 1)] - sum[y * r - 1]) == 0;
}

void solve() {
    int N, C;
    cin >> N >> C;
    for (int i = 1; i <= C; i++) cnt[i] = 0, sum[i] = 0;
    for (int i = 1; i <= N; i++) {
        int num;
        cin >> num;
        cnt[num] ++;
    }
    for (int i = 1; i <= C; i++) sum[i] = sum[i-1] + cnt[i];

    for (int r = 1; r <= C; r++) {
        if (cnt[r] > 0) continue;
        for (int y = 1; y * r <= C; y++) {
            if (cnt[y] == 0) continue;
            if (!judge(r, y, C)) {cout << "No" << endl; return;}
        }
    }
    cout << "Yes" << endl;
}
signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) solve();
}