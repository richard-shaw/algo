/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2022-01-01 18:22:35
 */
//#pragma GCC optimize("Ofast", "inline", "-ffast-math")
//#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
int mat[4200][60], row_cnt;
int N, M, V[70][70], E[270];
void solve () {
    cin >> N >> M;
    row_cnt = 0;
    for (int i = 0; i < 4200; i++) for (int j = 0; j < 60; j++) mat[i][j] = 0;
    for (int i = 1; i <= N; i++) for (int j = 1; j <= N; j++) V[i][j] = 0;
    for (int i = 1; i <= M; i++) {
        int a, b, c;
        cin >> a >> b >> c;
        V[a][b] = V[b][a] = i;
        E[i] = c;
    }
    for (int i = 1; i <= N; i++) {
        for (int j = i + 1; j <= N; j++) {
            for (int k = j + 1; k <= N; k++) {
                if (V[i][j] == 0 || V[j][k] == 0 || V[k][i] == 0) continue;
                mat[++row_cnt][0] = 0;
                if (E[V[i][j]] == -1) mat[row_cnt][V[i][j]] = 1; else mat[row_cnt][0] -= E[V[i][j]];
                if (E[V[j][k]] == -1) mat[row_cnt][V[j][k]] = 1; else mat[row_cnt][0] -= E[V[j][k]];
                if (E[V[k][i]] == -1) mat[row_cnt][V[k][i]] = 1; else mat[row_cnt][0] -= E[V[k][i]];
            }
        }
    }

    for (int i = 1; i <= M; i++) {
        int cur = -1;
        for (int r = 1; r <= row_cnt; r++) {
            if (mat[r][i] == 1) {cur = r; break;}
        }
        if (cur == -1) continue;
        if (cur != i) swap(mat[cur], mat[i]);
    }
}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}