/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-12-27 15:50:59
 */
//#pragma GCC optimize("Ofast", "inline", "-ffast-math")
//#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 3e5 + 9;
int N, arr[MAXN];
set<int> S, Q;
signed main() {
    fast_stream();
    cin >> N;
    int z = 0;
    for (int i = 1; i <= N; i++) cin >> arr[i], z += (arr[i] == 0);
    if (z == N) {
        for (int i = 1; i <= N; i++) arr[i] = (i-1)/ 2 + 1;
    } else {
        S.clear(), Q.clear();
        for (int i = 1; i <= N; i++) Q.insert(i);
        arr[0] = arr[N + 1] = 0;
        for (int i = 1; i < N; i++) if (arr[i] == arr[i + 1] && arr[i] != 0) S.insert(arr[i]), Q.erase(arr[i]);
        for (int i = 1; i <= N; i++) {
            if (arr[i] != 0) continue;
            if (arr[i - 1] == 0 && arr[i + 1] == 0) continue;
            if (arr[i - 1] != 0) {
                if (S.find(arr[i - 1]) == S.end()) {
                    arr[i] = arr[i - 1], S.insert(arr[i - 1]), Q.erase(arr[i - 1]);
                    continue;
                }
            } else if (arr[i + 1] != 0) {
                if (S.find(arr[i + 1]) != S.end()) {
                    arr[i] = arr[i + 1], S.insert(arr[i + 1]), Q.erase(arr[i + 1]);
                    continue;
                }
            }
            arr[i] = *Q.begin();
        }
    }
    for (int i = 1; i < N; i++) cout << arr[i] << ' ';
    cout << arr[N] << endl;
}