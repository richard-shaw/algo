/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-12-27 15:50:59
 */
#pragma GCC optimize("Ofast", "inline", "-ffast-math")
#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 2e5 + 9;
int bin[MAXN][32], sum[MAXN][32];
void init() {
    memset(sum, 0, sizeof(sum));
    for (int i = 0; i <= 200000; i++) {
        int x = i;
        for (int j = 0; j < 32; j++) {
            bin[i][j] = x % 2;
            x >>= 1;
            if (i == 0) sum[i][j] = 0;
            else sum[i][j] = sum[i-1][j] + bin[i][j];
        }
    }
}

void solve () {
    int L, R;
    cin >> L >> R;
    int ans = INF;
    for (int i = 0; i < 32; i++) {
        ans = min(ans, R - L + 1 - sum[R][i] + sum[L-1][i]);
    }
    cout << ans << endl;
}

signed main() {
    init();
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}