/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-12-27 15:50:59
 */
#pragma GCC optimize("Ofast", "inline", "-ffast-math")
#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 2e5 + 9;
int N, M, root = 1;
vector<pair<int, int>> V[MAXN];
void solve () {
    cin >> N >> M;
    for (int i = 1; i <= N; i++) V[i].clear();
    for (int i = 1; i < N; i++) {
        int x, y, v;
        cin >> x >> y >> v;
        V[x].push_back(make_pair(y, v)), V[y].push_back(make_pair(x, v));
    }
    while (M--) {
        int x, y, p;
        cin >> x >> y >> p;
        // 如果已确定的奇偶校验符合p，那么未知值异或和有偶数个1，否则奇数个1
    }

}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}