/* Generated by powerful Codeforces Tool
 * Author: shaw
 * Time: 2022-03-08 22:35:01
 */
//#pragma GCC optimize("Ofast", "inline", "-ffast-math")
//#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 2e5 + 9;
struct Point{
    int w, pos, idx;
} p[MAXN];
pair<int, int> ans[MAXN];
bool cmp(Point &a, Point &b) {
    return a.w < b.w;
}
bool cmp1(Point &a, Point &b) {
    return a.pos < b.pos;
}

void solve () {
    int M, N;
    cin >> N >> M;
    for (int i = 1; i <= M; i++) {
        cin >> p[i].pos >> p[i].w;
        p[i].idx = i;
    }
    sort(p + 1, p + 1 + M, cmp);
    sort(p + 1, p + 1 + 2 * N, cmp1);
    int W = 0;
    for (int i = 1; i <= N; i++) {
        ans[i].first = p[i].idx;
        ans[i].second = p[2*N+1-i].idx;
        W += (p[i].w + p[2*N+1-i].w);
    }
    cout << W << endl;
    for (int i = 1; i <= N; i++) cout << ans[i].first << ' ' << ans[i].second << endl;
}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}