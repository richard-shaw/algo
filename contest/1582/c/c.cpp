/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-10-24 18:05:04
 */
#pragma GCC optimize("Ofast", "inline", "-ffast-math")
#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffff;
const int MAXN = 2e5 + 9;
string S, tmp;
int n, ans;
vector<int> v;

bool is_pal(string s, int l) {
    for (int i = 0; i < l / 2; i++) {
        if (s[i] != s[l - 1 - i]) return false;
    }
    return true;
}

void judge(char ch) {
    v.clear();
    tmp = "";
    int l = 0;
    for (int i = 0; i < n; i++) {
        if (S[i] != ch) tmp += S[i], l++;
    }
    if (!is_pal(tmp, l)) return;
    int start_num = (l / 2) + (l % 2), end_num = (l / 2) + 1;
    int start_index, end_index, picked = 0;
    for (int i = 0; i < n; i++) {
        if (S[i] == ch) continue;
        picked++;
        if (picked == start_num) start_index = i;
        if (picked == end_num) end_index = i;
    }
    int delta = 0;
    for (int i = 1;;i++) {
        int nxt = start_index - i;
        int pre = end_index + i;
        if (nxt < 0 || pre >= n) break;
        if (S[nxt] == ch && S[pre] == ch) delta += 2;
    }
    ans = min(ans, n - l - delta);
}

void solve () {
    cin >> n >> S;
    ans = INF;
    if (is_pal(S, n)) {
        cout << 0  << endl;
        return;
    }
    for (int i = 0; i < 26; i++) {
        judge(i + 'a');
    }
    if (ans == INF) cout << -1 << endl;
    else cout << ans << endl;
}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}