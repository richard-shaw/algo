/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-10-24 18:05:04
 */
#pragma GCC optimize("Ofast", "inline", "-ffast-math")
#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 1e5 + 9;
int n, arr[MAXN], cnt[MAXN];

int lcm(int a, int b) {
    return a * b / __gcd(a, b);
}

void solve () {
    cin >> n;
    for (int i = 1; i <= n; i++) cin >> arr[i];
    if (n % 2 == 0) {
        for (int i = 1; i <= n / 2; i++) {
            swap(arr[2*i], arr[2*i-1]);
            arr[2*i] = -arr[2*i];
        }
    } else if (n <= 40000) {
        for (int i = 1; i < n / 2; i++) {
            swap(arr[2*i], arr[2*i-1]);
            arr[2*i] = -arr[2*i];
        }
        int l = lcm(lcm(arr[n], arr[n-1]), arr[n-2]);
        arr[n-2] = l / arr[n-2];
        arr[n-1] = l / arr[n-1];
        arr[n] = -2 * l / arr[n];
    } else {
        for (int i = 1; i <= 10000; i++) cnt[i] = 0;
        int fg;
        for (int i = 1; i <= n; i++) {
            cnt[abs(arr[i])]++;
            if (cnt[abs(arr[i])] >= 3) {
               fg = abs(arr[i]);
               break;
            }
        }
        vector<int> index;
        index.clear();
        for (int i = 1; i <= n; i++) {
            if (abs(arr[i]) == fg) index.push_back(i);
            if (index.size() == 3) break;
        }
        swap(arr[n], arr[index[2]]);
        swap(arr[n-1], arr[index[1]]);
        swap(arr[n-2], arr[index[0]]);

        for (int i = 1; i < n / 2; i++) {
            swap(arr[2*i], arr[2*i-1]);
            arr[2*i] = -arr[2*i];
        }
        arr[n-2] = arr[n-2] > 0 ? 1 : -1;
        arr[n-1] = arr[n-1] > 0 ? 1 : -1;
        arr[n] = arr[n] > 0 ? -2 : 2;

        swap(arr[n], arr[index[2]]);
        swap(arr[n-1], arr[index[1]]);
        swap(arr[n-2], arr[index[0]]);
    }
    for (int i = 1; i < n; i++) cout << arr[i] << ' ';
    cout << arr[n] << endl;
}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}
