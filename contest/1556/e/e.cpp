/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-08-30 23:39:22
 */

#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 100;
int tmp[MAXN][MAXN], a[MAXN], b[MAXN], arr[MAXN], N, Q;
int dp(int l, int r) {
    if (tmp[l][r] != INF) return tmp[l][r];
    if (l == r) return tmp[l][r] = (arr[l] < 0 ? -arr[l] : INF);
    if (l+1 == r) return tmp[l][r] = ((arr[l] + arr[r] == 0 && arr[l] < 0) ? arr[r] : INF);
    int res = INF;
    for (int k = l; k < r; k++) {
        int sl = dp(l, k);
        int sr = dp(k+1, r);
        if (sl == INF || sr == INF) continue;
        res = min(res, sl + sr);
    }
    return tmp[l][r] = res;
}
void solve () {
    for (int i = 0; i < MAXN; i++) for (int j = 0; j < MAXN; j++) tmp[i][j] = INF;
    cin >> N >> Q;
    for (int i = 1; i <= N; i++) cin >> a[i];
    for (int i = 1; i <= N; i++) cin >> b[i], arr[i] = a[i] - b[i];
    while(Q--) {
        int l, r;
        cin >> l >> r;
        int res = dp(l, r);
        cout << (res == INF ? -1 : res) << endl;
    }
}

signed main() {
    fast_stream();
    int t;
//    cin >> t;
    t = 1;
    while (t--) {
        solve();
    }
}