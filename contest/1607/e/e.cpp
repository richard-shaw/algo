/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-11-18 13:46:30
 */
#pragma GCC optimize("Ofast", "inline", "-ffast-math")
#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 2e5 + 9;
int N, M;
string order;
void solve () {
    // LRDU
    cin >> N >> M >> order;
    int length = order.length();
    int r = 1, c = 1, r_t = 1, r_b = 1, c_l = 1, c_r = 1;
    for (int i = 0; i < length; i++) {
        if (order[i] == 'L') {
            if (c_r - c_l == M - 1 && c == c_l) break;
            c--;
            if (c < c_l) c_l--;
        } else if (order[i] == 'R') {
            if (c_r - c_l == M - 1 && c == c_r) break;
            c++;
            if (c > c_r) c_r++;
        } else if (order[i] == 'D') {
            if (r_b - r_t == N - 1  && r == r_b) break;
            r++;
            if (r > r_b) r_b++;
        } else if (order[i] == 'U') {
            if (r_b - r_t == N - 1  && r == r_t) break;
            r--;
            if (r < r_t) r_t--;
        }
    }
    r = r_t <= 0 ? 2 - r_t : 1;
    c = c_l <= 0 ? 2 - c_l : 1;
    cout << r << ' ' << c << endl;
}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}