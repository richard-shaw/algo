/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-10-10 17:05:01
 */
//#pragma GCC optimize("Ofast", "inline", "-ffast-math")
//#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 1003;
int arr[MAXN][5];
vector<int> v0, v1, v2;
bool ok(int i, int j, int n) {
    v0.clear(), v1.clear(), v2.clear();
    for (int _i = 1; _i <= n; _i++) {
        if (arr[_i][i] == 1 && arr[_i][j] == 1) v0.push_back(_i);
        else if (arr[_i][i] == 1) v1.push_back(_i);
        else if (arr[_i][j] == 1) v2.push_back(_i);
        else return false;
    }
    return v1.size() <= n / 2 && v2.size() <= n / 2;
//    return true;
}
void solve () {
    int n;
    cin >> n;
    for (int i = 1; i <= n; i++) for (int j = 1; j <= 5; j++) cin >> arr[i][j];

    for (int i = 1; i <= 5; i++) {
        for (int j = 1; j <= 5; j++) {
            if (i == j) continue;
            if (ok(i, j, n)) { cout << "YES" << endl; return ;}
        }
    }
    cout << "NO" << endl;
}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}