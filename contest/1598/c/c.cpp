/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-10-10 17:05:01
 */
//#pragma GCC optimize("Ofast", "inline", "-ffast-math")
//#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 2e5 + 9;
int arr[MAXN];
map<int, int> mp;
bool base_judge(int s, int n) {
    int gcd = __gcd(s, n);
    return n == gcd || (n == 2 * gcd);
}
void solve () {
    mp.clear();
    int n, sum = 0;
    cin >> n;
    for (int i = 1; i <= n; i++) cin >> arr[i], sum += arr[i];
    if (!base_judge(sum, n)) { cout << 0 << endl; return;}
    sort(arr + 1, arr + 1 + n);
    for (int i = 1; i <= n; i++) {
        if (mp.find(arr[i]) == mp.end()) mp.insert({arr[i], 0});
        mp[arr[i]]++;
    }
    int ans = 0, k = (2 * sum) / n;
    for (int i = 1; i <= n; i++) {
        mp[arr[i]]--;
        ans += ((mp.find(k - arr[i]) == mp.end()) ? 0 : mp[k - arr[i]]);
    }
    cout << ans << endl;

}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}