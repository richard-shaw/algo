/* Generated by powerful Codeforces Tool
 * Author: shaw
 * Time: 2022-01-29 17:28:41
 */
//#pragma GCC optimize("Ofast", "inline", "-ffast-math")
//#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 60;
int N, A;
set<int> S[MAXN];

bool cmp(set<int> &s1, set<int> &b) {
    return s1.size() < b.size();
}

void solve () {
    cin >> N;
    for (int i = 1; i <= N; i++) S[i].clear();
    for (int i = 1; i <= N; i++) {
        cin >> A;
        while (A > 0) {
            if (A >= 1 && A <= N) {
                S[A].insert(i);
            }
            A >>= 1;
        }
    }
    for (int i = 1; i <= N; i++) {
        sort(S+i, S+1+N, cmp);
        if (S[i].empty()) {
            cout << "NO" << endl;
            return;
        }
        int num = *S[i].begin();
        for (int j = i; j <= N; j++) {
            S[j].erase(num);
        }
    }
    cout << "YES" << endl;
}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}