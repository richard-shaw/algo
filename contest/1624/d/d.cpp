/* Generated by powerful Codeforces Tool
 * Author: shaw
 * Time: 2022-01-29 17:28:41
 */
#pragma GCC optimize("Ofast", "inline", "-ffast-math")
#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 2e5 + 9;
string S;
int alp[26], n, k, cnt[2];
bool judge(int x) {
    int p = k, even = cnt[0], odd = cnt[1];
    while (p--) {
        int q = x;
        while (q) {
            if (q & 1) {
                if (odd) { odd--, q--; continue;}
                else {
                    if (even) { even--; odd++; q--; continue;}
                    else return false;
                }
            } else {
               if (q > even * 2) return false;
               even -= q / 2;
               q = 0;
            }
        }
    }
    return true;
}
void solve () {
    memset(alp, 0, sizeof(alp));
    cnt[0] = cnt[1] = 0;
    cin >> n >> k >> S;
    for (int i = 0; i < n; i++) alp[S[i] - 'a']++;
    for (int i = 0; i < 26; i++) {
        cnt[0] += alp[i] / 2;
        cnt[1] += alp[i] & 1;
    }
    int L = 0, R = n / k;
    while (R - L > 1) {
        int M = (L + R) >> 1;
        if (judge(M)) L = M;
        else R = M - 1;
    }
    if (L != R) {
        if (judge(R)) L = R;
    }
    cout << L << endl;
}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}