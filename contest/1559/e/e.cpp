/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-08-24 17:04:27
**/

#include<bits/stdc++.h>

using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 1e5 + 9;
const int MOD = 998244353;
int N, M, L[55], R[55], mu[MAXN], visit[MAXN], prime[MAXN];
int dp[55][MAXN], sum[55][MAXN];

void mobius() {
    memset(visit, 0, sizeof(visit));
    int tot = 0;
    mu[1] = 1;
    for (int i = 2; i < MAXN; i++) {
        if (!visit[i]) {
            prime[tot++] = i;
            mu[i] = -1;
        }
        for (int j = 0; j < tot; j++) {
            if (i * prime[j] >= MAXN) break;
            visit[i * prime[j]] = 1;
            if (i % prime[j] == 0) {
                mu[i * prime[j]] = 0;
                break;
            } else {
                mu[i * prime[j]] = -mu[i];
            }
        }
    }
}

void memset_dp(int r, int c) {
    for (int c0 = 0; c0 <= c; c0++) dp[r][c0] = sum[r][c0] = 0;
}

int lower(int d, int idx) {
    return (L[idx] / d) + (L[idx] % d != 0);
}

int upper(int d, int idx) {
    return min(R[idx] / d, M / d);
}

int solve(int d) {
    int M0 = M / d;
    memset_dp(1, M0);
    for (int s = 0; s <= M0; s++) {
        dp[1][s] = (lower(d, 1) <= s && s <= upper(d, 1));
        sum[1][s] = (dp[1][s] + (s > 0 ? sum[1][s-1] : 0)) % MOD;
    }
    for (int n = 2; n <= N; n++) {
        memset_dp(n, M0);
        for (int s = 0; s <= M0; s++) {
            int kL = lower(d, n), kU = min(upper(d, n), s);
            if (kL > kU) continue;
            dp[n][s] = (sum[n-1][s-kL] - (s-kU > 0 ? sum[n-1][s-kU-1] : 0)) % MOD;
            sum[n][s] = (dp[n][s] + (s > 0 ? sum[n][s-1] : 0)) % MOD;
        }
    }
    return sum[N][M0];
}

signed main() {
    fast_stream();
    cin >> N >> M;
    for (int i = 1; i <= N; i++) cin >> L[i] >> R[i];
    mobius();
    int Ans = 0;
    for (int d = 1; d <= M; d++) Ans = (Ans + mu[d] * solve(d)) % MOD;
    if (Ans < 0) Ans += MOD;
    cout << Ans << endl;
}