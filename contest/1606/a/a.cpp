/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-10-29 22:35:04
 */
#pragma GCC optimize("Ofast", "inline", "-ffast-math")
#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 2e5 + 9;

pair<int, int> cal(string s) {
    int l = s.length(), ab = 0, ba = 0;
    for (int i = 0; i < l - 1; i++) {
        if (s[i] == 'a' && s[i+1] == 'b') ab++;
        if (s[i] == 'b' && s[i+1] == 'a') ba++;
    }
    return {ab, ba};
}
string change(string s, int f) {
    if (f / 2 > 0) {
        s[0] = s[0] == 'a' ? 'b' : 'a';
    }
    if (f & 1) {
        s[s.length()-1] = s[s.length()-1] == 'a' ? 'b' : 'a';
    }
    return s;
}

void solve () {
    string s;
    cin >> s;
    pair<int, int> ans = cal(s);
    if (ans.first == ans.second) cout << s << endl;
    else {
        string s1 = change(s, 0b01);
        string s2 = change(s, 0b10);
        string s3 = change(s, 0b11);
        if (ans.first == ans.second) {
            cout << s1 << endl;
            return;
        }
        ans = cal(s2);
        if (ans.first == ans.second) {
            cout << s2 << endl;
        } else {
            cout << s3 << endl;
        }
    }
}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}