/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-10-13 22:35:01
 */
//#pragma GCC optimize("Ofast", "inline", "-ffast-math")
//#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 4e5 + 9;
int cnt[MAXN], N, K;
vector<int> v[MAXN], vs;
set<int> s[MAXN], tmp;

void clear(int n) {
    for (int i = 0; i <= n; i++) cnt[i] = 0, v[i].clear(), s[i].clear();
    tmp.clear();
    vs.clear();
}
void solve () {
    cin >> N >> K;
    for (int i = 1; i < N; i++) {
        int u, _v;
        cin >> u >> _v;
        cnt[u]++, cnt[_v]++;
        v[u].push_back(_v);
        v[_v].push_back(u);
    }
    for (int i = 1; i <= N; i++) {
        s[cnt[i]].insert(i);
    }

    int Ans = N;
    while(K--) {
        if (Ans <= 2) {cout << 0 << endl; clear(N); return;}
        tmp.clear(); vs.clear();
        for (int n1 : s[1]) vs.push_back(n1);
        for (int n1 : vs) {
            cnt[n1]--; Ans--;
            tmp.insert(n1);
            for (int u : v[n1]) {
                if (cnt[u] > 0) {
                    s[cnt[u]].erase(u);
                    cnt[u]--;
                    s[cnt[u]].insert(u);
                }
            }
        }
        for (int i : tmp) {
            s[1].erase(i);
        }
    }
    cout << Ans << endl;
    clear(N);
}

signed main() {
    for (int i = 0; i < MAXN; i++) v[i].clear(), cnt[i] = 0, s[i].clear();
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}