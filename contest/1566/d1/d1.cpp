/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-09-12 22:37:06
 */

#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
//#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 310;
int arr[MAXN], s[MAXN];
struct NODE {
    int a, b;
} node[MAXN];

inline int lowbit(int x) {
    return x & (-x);
}

void put(int pos, int x) {
    while (pos < MAXN) {
        arr[pos] += x;
        pos += lowbit(pos);
    }
}

int get(int pos) {
    int Ans = 0;
    while (pos > 0) {
        Ans += arr[pos];
        pos -= lowbit(pos);
    }
    return Ans;
}

bool cmp(NODE a, NODE b) {
    if (a.a < b.a) return true;
    else if (a.a == b.a) {
        return a.b > b.b;
    }
    return false;
}
void solve () {
    memset(arr, 0, sizeof(arr));
    int n, m;
    cin >> n >> m;
    for (int i = 0; i < m; i++) {
        cin >> node[i].a;
        node[i].b = i + 1;
    }
    sort(node, node + m, cmp);
    for (int i = 0; i < m; i++) {
        s[node[i].b] = i + 1;
    }
    int Ans = 0;
    for (int i = 1; i <= m; i++) {
        Ans += get(s[i]);
        put(s[i], 1);
    }
    cout << Ans << endl;
}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}