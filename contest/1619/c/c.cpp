/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-12-22 17:04:07
 */
#pragma GCC optimize("Ofast", "inline", "-ffast-math")
#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 2e5 + 9;
int Ans = -1;

void dfs(string a, string s, int ai, int si, string b) {
    if (Ans != -1) return;
    if (ai > si) return;
    else if (ai > 0 && si == 0) return;
    else if (ai == 0 && si > 0) dfs(a, s, 0, 0, s.substr(0, si) + b);
    else if (ai == 0 && si == 0) Ans = atoll(b.c_str());
    else {
        if (s[si-1] >= a[ai-1]) {
            dfs(a, s, ai-1, si-1, ((char)('0' + s[si-1]-a[ai-1])) + b);
        } else {
            if (si >= 2 && s[si-2] == '1') dfs(a, s, ai-1, si-2, ((char)('0' + s[si-1] - a[ai-1] + 10)) + b);
        }
    }
}

void solve () {
    Ans = -1;
    string a, s;
    cin >> a >> s;
    dfs(a, s, a.length(), s.length(), "");
    cout << Ans << endl;
}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}