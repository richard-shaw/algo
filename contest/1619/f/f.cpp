/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-12-22 17:04:07
 */
#pragma GCC optimize("Ofast", "inline", "-ffast-math")
#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 2e5 + 9;
int b[MAXN], id, in_v[MAXN];
vector<int> v;
set<int> s;
int N, M, K;
void init() {
    id = 0;
    v.clear();
    for (int i = 1; i <= N; i++) in_v[i] = 0;
    int mx = -1;
    for (int i = 1; i <= N; i++) mx = max(mx, b[i]);
    for (int i = 1; i <= N; i++) if (mx - b[i] >= 1) v.push_back(i), in_v[i] = 1;
}
int get_id() {
    if (v.empty()) {
        while (in_v[++id]) {}
        return id;
    }
    int r = v.back();
    v.pop_back();
    return r;
}

void solve () {
    cin >> N >> M >> K;
    for (int i = 1; i <= N; i++) b[i] = 0;
    int c = N / M, d = N % M;
    for (int k = 1; k <= K; k++) {
        init();
        for (int m = 1; m <= M; m++) {
            int C = c + (m <= d);
            cout << C;
            for (int i = 1; i <= C; i++) {
                int j = get_id();
                cout << ' ' << j;
                if (m <= d) b[j]++;
            }
            cout << endl;
        }
    }

}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    for (int i = 1; i <= t; i++) {
        solve();
        if (i != t) cout << endl;
    }
}