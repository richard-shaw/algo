/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-12-25 00:51:10
 */
//#pragma GCC optimize("Ofast", "inline", "-ffast-math")
//#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 2e5 + 9;
int N, a[MAXN], b[MAXN], gt[MAXN], lt[MAXN], eq[MAXN];
pair<int, int> P[MAXN];
void solve () {
    cin >> N;
    for (int i = 0; i < N; i++) cin >> a[i];
    sort(a, a + N);
    gt[0] = lt[0] = eq[0] = 0;
    for (int i = 0; i < N; i++) {
        P[a[i]].second++;
        if (P[a[i]].first == -1) P[a[i]].first = i;
    }
    for (int i = 1; i <= N; i++) {
        gt[i] = gt[i-1], lt[i] = lt[i-1], eq[i] = eq[i-1];
        if (a[i-1] > i-1) gt[i]++;
        else if (a[i-1] == i-1) eq[i]++;
        else lt[i]++;
    }
    for (int i = 0; i <= N; i++) b[i] = gt[i] > 0 ? -1 : lt[i];
    for (int i = 0; i <= N; i++) {
        b[i] += P[a[i]].second;
    }
    for (int i = 0; i <= N; i++) {
        if (a[i] == i) b[i] += (P[i].first - i);
    }
    for (int i = 0; i < N; i++) {
        P[a[i]].first = -1, P[a[i]].second = 0;
    }

    for (int i = 0; i < N; i++) {
        cout << b[i] << ' ';
    }
    cout << b[N] << endl;
}

signed main() {
    for (int i = 0; i < MAXN; i++) P[i].first = -1, P[i].second = 0;
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}