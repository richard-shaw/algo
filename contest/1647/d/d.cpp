/* Generated by powerful Codeforces Tool
 * Author: shaw
 * Time: 2022-03-11 22:35:04
 */
#pragma GCC optimize("Ofast", "inline", "-ffast-math")
#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 2e5 + 9;

bool is_prime(int n) {
    for (int i = 2; i * i <= n; i++) if (n % i == 0) return false;
    return true;
}

bool single_fac(int n) {
    for (int i = 2; i * i <= n; i++) {
        if (n % i == 0) {
            if (i == n / i) return true;
            else return false;
        }
    }
    return true;
}

int find_single_fac(int n) {
    for (int i = 2; i * i <= n; i++) if (n % i == 0) return i;
    return -1;
}

int CNT(int n, int p) {
    int ans = 0;
    while (n % p == 0) n /= p, ans++;
    return ans;
}

void solve () {
    int x, d;
    cin >> x >> d;
    int k = 0, s = x;
    while(true) {
        if (s % d == 0) s /= d, k++;
        else break;
    }
    if (k == 1) cout << "NO" << endl;
    else {
        if (!is_prime(s)) cout << "YES" << endl;
        else {
            if (k == 2) cout << "NO" << endl;
            else {
                if (is_prime(d)) cout << "NO" << endl;
                else {
                    if (!single_fac(d)) cout << "YES" << endl;
                    else {
                        if (k > 3) cout << "YES" << endl;
                        else {
                            int p = find_single_fac(d);
                            int q = CNT(d, p), t = CNT(s, p);
                            if (q - t > 1) cout << "YES" << endl;
                            else cout << "NO" << endl;
                        }
                    }
                }
            }
        }
    }
}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}