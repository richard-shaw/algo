/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-10-08 23:05:02
 */
//#pragma GCC optimize("Ofast", "inline", "-ffast-math")
//#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 3e5 + 9;
int prime[MAXN], tot = 0, visit[MAXN];
void init() {
    memset(visit, 0, sizeof(visit));
//    prime[++tot] = 1;
    for (int i = 2; i < MAXN; i++) {
        if (visit[i] == 0) prime[++tot] = i;
        for (int j = 1; j <= tot && i * prime[j] < MAXN; i++) {
            visit[i * prime[j]] = 1;
            if (i % prime[j] == 0) break;
        }
    }
}

void solve () {
    int n; char c; string s; int cnt = 0;
    cin >> n >> c >> s;
    for (int j = 1; j <= tot; j++) {
        bool ok = false;
        for (int k = 1; k * prime[j] <= n; j++) {
            if (s[k * prime[j] -1] == c) { ok = false; break; }
        }
        if (ok) continue;
        for (int k = 1; k * prime[j] <= n; j++) {
            s[k * prime[j] - 1] = c;
        }
        cnt++;
    }
    cout << cnt << endl;

}

signed main() {
    init();
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}