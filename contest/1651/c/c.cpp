/* Generated by powerful Codeforces Tool
 * Author: shaw
 * Time: 2022-03-10 22:35:01
 */
#pragma GCC optimize("Ofast", "inline", "-ffast-math")
#pragma GCC target("avx,sse2,sse3,sse4,mmx")
#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 2e5 + 9;
int A[MAXN], B[MAXN];

void solve4(int &Ans, int N) {
   Ans = min(Ans, abs(A[1] - B[N]) + abs(A[N] - B[1]));
   Ans = min(Ans, abs(A[1] - B[1]) + abs(A[N] - B[N]));
}

void solve2(int &Ans, int N) {
    int tmp[4] = {INF, INF, INF, INF};
    for (int i = 1; i <= N; i++) {
        tmp[0] = min(tmp[0], abs(A[1] - B[i]));
        tmp[1] = min(tmp[1], abs(A[N] - B[i]));
        tmp[2] = min(tmp[2], abs(A[i] - B[1]));
        tmp[3] = min(tmp[3], abs(A[i] - B[N]));
    }
    Ans = min(Ans, abs(A[1] - B[1]) + tmp[1] + tmp[3]);
    Ans = min(Ans, abs(A[1] - B[N]) + tmp[1] + tmp[2]);
    Ans = min(Ans, abs(A[N] - B[1]) + tmp[0] + tmp[3]);
    Ans = min(Ans, abs(A[N] - B[N]) + tmp[0] + tmp[2]);
}

void solve0(int &Ans, int N) {
    int tmp[4] = {INF, INF, INF, INF};
    for (int i = 2; i < N; i++) {
        tmp[0] = min(tmp[0], abs(A[1] - B[i]));
        tmp[1] = min(tmp[1], abs(A[N] - B[i]));
        tmp[2] = min(tmp[2], abs(A[i] - B[1]));
        tmp[3] = min(tmp[3], abs(A[i] - B[N]));
    }
    Ans = min(Ans, tmp[0] + tmp[1] + tmp[2] + tmp[3]);
}

void solve () {
    int N, Ans = INF;
    cin >> N;
    for (int i = 1; i <= N; i++) cin >> A[i];
    for (int i = 1; i <= N; i++) cin >> B[i];

    solve4(Ans, N);
    solve2(Ans, N);
    solve0(Ans, N);
    cout << Ans << endl;

}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}