/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-09-03 21:38:48
 */

#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 3e5 + 9;
int a[MAXN], b[MAXN], N, sa[MAXN], sb[MAXN];

bool cmp(int a, int b) {
    return a > b;
}

void solve () {
    cin >> N;
    for (int i = 1; i <= N; i++) cin >> a[i];
    for (int i = 1; i <= N; i++) cin >> b[i];
    sort(a+1, a+1+N);
    sort(b+1, b+1+N, cmp);
    sa[0] = sb[0] = 0;
    for (int i = 1; i <= N; i++) sa[i] = sa[i-1] + a[i], sb[i] = sb[i-1] + b[i];
    int k = N - N / 4;
    if (sa[N] - sa[N-k] >= sb[k]) {
        cout << 0 << endl;
        return;
    }
    for (int add = 1; ; add++) {
        int k = (N+add) - (N+add) / 4;
        a[N+add] = 100, b[N+add] = 0;
        sa[N+add] = sa[N+add-1] + 100;
        sb[N+add] = sb[N+add-1];
        if (sa[N+add] - sa[N+add-k] >= sb[k]) {
            cout << add << endl;
            break;
        }
    }
}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}