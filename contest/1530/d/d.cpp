/* Generated by powerful Codeforces Tool
 * Author: RichardShaw
 * Time: 2021-09-03 21:38:48
 */

#include<bits/stdc++.h>
using namespace std;
void fast_stream() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
#define int long long
const int INF = 0x7fffffffffffffff;
const int MAXN = 2e5 + 9;

int gft[MAXN], N, visit[MAXN], ans[MAXN];
vector<int> v1, v2, v3, v4;

void solve () {
    cin >> N;
    v1.clear(), v2.clear(), v3.clear(), v4.clear();
    for (int i = 1; i <= N; i++) visit[i] = 0, ans[i] = -1;
    for (int i = 1; i <= N; i++) cin >> gft[i];
    for (int i = 1; i <= N; i++) {
        if (visit[gft[i]] == 0) {
            visit[gft[i]] = 1;
            ans[i] = gft[i];
        }
    }
    for (int i = 1; i <= N; i++) if (visit[i] == 0) v1.push_back(i);
    for (int i = 1; i <= N; i++) if (ans[i] == -1) v2.push_back(i);
    int sz = v1.size();
    sort(v1.begin(), v1.end());
    sort(v2.begin(), v2.end());
    for (int i = 0; i < sz; i++) ans[v2[i]] = v1[i];

    for (int i = 1; i <= N; i++) if(ans[i] == i) v3.push_back(i);

    for (int q : v3) {
        v4.push_back(q);
        if (v4.size() == 2) {
            swap(ans[v4[0]], ans[v4[1]]);
            v4.clear();
        }
    }
    if (!v4.empty()) {
        int Q = -1;
        for (int i = 1; i <= N; i++) {
            if (i == v4[0]) continue;
            if (ans[i] != gft[i]) {Q = i; break;}
        }
        if (Q == -1) {
            if (v4[0] == 1) {
                swap(ans[v4[0]], ans[2]);
            }else {
                swap(ans[v4[0]], ans[1]);
            }
        } else {
            swap(ans[v4[0]], ans[Q]);
        }
    }
    int Ans = 0;
    for (int i = 1; i <= N; i++) Ans += (ans[i] == gft[i]);
    cout << Ans << endl;
    for (int i = 1; i <= N; i++) {
        cout << ans[i];
        if (i == N) cout << endl;
        else cout << ' ';
    }




}

signed main() {
    fast_stream();
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}